version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: ${NODE_ENV:-development}
    container_name: portal-exames-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - DB_PATH=/app/database/portal_exames.db
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-15}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_db:/app/database
    networks:
      - portal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: ${NODE_ENV:-development}
    container_name: portal-exames-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
      - VITE_APP_NAME=${VITE_APP_NAME:-Portal de Exames CTC}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - portal-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Proxy (apenas em produção)
  nginx:
    image: nginx:alpine
    container_name: portal-exames-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - portal-network
    depends_on:
      - frontend
      - backend
    profiles:
      - production

  # Redis para cache e sessões (opcional)
  redis:
    image: redis:7-alpine
    container_name: portal-exames-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - portal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - production

volumes:
  backend_db:
    driver: local
  redis_data:
    driver: local

networks:
  portal-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
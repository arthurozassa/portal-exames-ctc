# Frontend Dockerfile
FROM node:18-alpine AS base

WORKDIR /app

# Copiar arquivos de dependências
COPY frontend/package*.json ./

# Instalar dependências
RUN npm ci && npm cache clean --force

# Etapa de desenvolvimento
FROM base AS development

# Copiar código fonte
COPY frontend/ ./

# Expor porta
EXPOSE 5173

# Comando para desenvolvimento
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

# Etapa de build
FROM base AS build

# Copiar código fonte
COPY frontend/ ./

# Build da aplicação
RUN npm run build

# Etapa de produção
FROM nginx:alpine AS production

# Copiar configuração customizada do nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copiar arquivos buildados
COPY --from=build /app/dist /usr/share/nginx/html

# Criar usuário não-root
RUN addgroup -g 1001 -S nginx-user
RUN adduser -S nginx-app -u 1001 -G nginx-user

# Ajustar permissões
RUN chown -R nginx-app:nginx-user /usr/share/nginx/html
RUN chown -R nginx-app:nginx-user /var/cache/nginx
RUN chown -R nginx-app:nginx-user /etc/nginx/conf.d

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# Expor porta
EXPOSE 80

# Comando para produção
CMD ["nginx", "-g", "daemon off;"]
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: production
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/database/portal_exames.db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=24h
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=50
      - CORS_ORIGIN=${FRONTEND_URL}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - backend_db:/app/database
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    environment:
      - NODE_ENV=production
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  nginx:
    profiles: []  # Ativo por padrão em produção
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - letsencrypt_certs:/etc/letsencrypt:ro
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M

  redis:
    profiles: []  # Ativo por padrão em produção
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Serviço para backup automático
  backup:
    image: alpine:latest
    container_name: portal-exames-backup
    restart: unless-stopped
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}  # Todo dia às 2h
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
    volumes:
      - backend_db:/data/db:ro
      - backup_storage:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    command: crond -f
    profiles:
      - backup

volumes:
  letsencrypt_certs:
    external: true
  backup_storage:
    driver: local